#!/usr/bin/env bash

REPOSITORY_NAME=`sed -n 's/REPOSITORY_NAME=\(.*\)/\1/p' config/"$1"`
CLUSTER=`sed -n 's/CLUSTER=\(.*\)/\1/p' config/"$1"`
SERVICE_NAME=`sed -n 's/SERVICE_NAME=\(.*\)/\1/p' config/"$1"`
REGION=`sed -n 's/REGION=\(.*\)/\1/p' config/"$1"`

RELEASE="$2"
REPOSITORY_TAG=''
REVISION=''

if [ "${RELEASE}" == "master" ]
then
  REPOSITORY_TAG='latest'
else
  REPOSITORY_TAG=${RELEASE}
fi

REPOSITORY_URI=`aws ecr describe-repositories --repository-names ${REPOSITORY_NAME} --region ${REGION} | jq .repositories[].repositoryUri | tr -d '"'`

IMAGE=${REPOSITORY_URI}:${REPOSITORY_TAG}

ECS_SERVICES=`aws ecs list-services --cluster ${CLUSTER} --region ${REGION} | jq .serviceArns`

TASK_DEFINITION=`aws ecs describe-task-definition --task-definition ${SERVICE_NAME} --region ${REGION}`

CURRENT_RELEASE=$(echo $TASK_DEFINITION | jq .taskDefinition.containerDefinitions[0].image -r | sed 's/^.*://')


if [ "${CURRENT_RELEASE}" == "${REPOSITORY_TAG}" ]
then
    REVISION=$(echo $TASK_DEFINITION | jq '.taskDefinition.revision')
else
    NEW_TASK_DEFINITION=`echo ${TASK_DEFINITION} | jq --arg IMAGE ${IMAGE} '.taskDefinition | .containerDefinitions[0].image = $IMAGE | del(.taskDefinitionArn) | del(.revision) | del(.status) | del(.requiresAttributes) | del(.compatibilities)'`
    NEW_TASK_INFO=`aws ecs register-task-definition --region ${REGION} --cli-input-json ${NEW_TASK_DEFINITION}`
    REVISION=$(echo $NEW_TASK_INFO | jq '.taskDefinition.revision')
fi


if [ "[]" == "${ECS_SERVICES}" ];then
  echo "skip update company service"
else
  aws ecs update-service --cluster ${CLUSTER} --service ${SERVICE_NAME} --task-definition ${SERVICE_NAME}:${REVISION} --desired-count 1 --force-new-deployment --region ${REGION}
fi
