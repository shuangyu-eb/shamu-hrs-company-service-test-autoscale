#!/usr/bin/env bash

REPOSITORY_NAME=`sed -n 's/REPOSITORY_NAME=\(.*\)/\1/p' config/"$1"`
REPOSITORY_TAG=`sed -n 's/REPOSITORY_TAG=\(.*\)/\1/p' config/"$1"`
CLUSTER=`sed -n 's/CLUSTER=\(.*\)/\1/p' config/"$1"`
SERVICE_NAME=`sed -n 's/SERVICE_NAME=\(.*\)/\1/p' config/"$1"`
REGION=`sed -n 's/REGION=\(.*\)/\1/p' config/"$1"`

while [ -n "$2" ]
do
  case "$2" in
    -repository-name)
        REPOSITORY_TAG=$3
        shift
        ;;
    -repository-tag)
        REPOSITORY_TAG=$3
        shift
        ;;
    -cluster)
        CLUSTER=$3
        shift
        ;;
    -service-name)
        SERVICE_NAME=$3
        shift
        ;;
    *)
        echo "$2 is not an option"
        exit 0
        ;;
  esac
  shift
done


DOCKER_LOGIN=`aws ecr get-login --no-include-email --region ${REGION}`
${DOCKER_LOGIN}

mvn clean package -Dmaven.test.skip=true -e

docker build -t ${REPOSITORY_NAME} .

REPOSITORY_URI=`aws ecr describe-repositories --repository-names ${REPOSITORY_NAME} --region ${REGION} | jq .repositories[].repositoryUri | tr -d '"'`

docker tag ${REPOSITORY_NAME}:${REPOSITORY_TAG} ${REPOSITORY_URI}:${REPOSITORY_TAG}

docker push ${REPOSITORY_URI}:${REPOSITORY_TAG}

ECS_SERVICES=`aws ecs list-services --cluster ${CLUSTER} --region ${REGION} | jq .serviceArns`

if [ "[]" == "${ECS_SERVICES}" ];then
  echo "skip update company service"
else
  aws ecs update-service --cluster ${CLUSTER} --service ${SERVICE_NAME} --task-definition ${SERVICE_NAME} --desired-count 1 --force-new-deployment --region ${REGION}
fi

